import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JFrame;

public class Display extends JFrame 
{
    private BufferedImage backgroundImage;
    private BufferedImage foregroundImage;
    private BufferedImage playerImage; // プレイヤー画像

    Display(String name) 
    {
        super(name);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setUndecorated(true); // ウィンドウの装飾を取り除く
        setExtendedState(JFrame.MAXIMIZED_BOTH); // フルスクリーンにする
        setVisible(true);
        setLocationRelativeTo(null); // ウィンドウを画面の中央に配置
    }

    void loadBackground(String imagePath) {
        try {
            backgroundImage = ImageIO.read(new java.io.File(imagePath));
            repaint(); // 再描画
        } catch (IOException e) {
            System.err.println("背景画像の読み込みエラー: " + imagePath);
            e.printStackTrace();
        }
    }

    void loadForeground(String imagePath) 
    {
        try 
        {
            foregroundImage = ImageIO.read(new java.io.File(imagePath));
            repaint(); // 再描画
        } 
        catch (IOException e) 
        {
            System.err.println("フロント画像の読み込みエラー: " + imagePath);
            e.printStackTrace();
        }
    }

    void loadPlayer(String imagePath)
    {
        try
        {
            playerImage = ImageIO.read(new java.io.File(imagePath));
            repaint(); // 再描画
        } catch (IOException e) 
        {
            System.err.println("プレイヤー画像の読み込みエラー: " + imagePath);
            e.printStackTrace();
        }
    }

    @Override
    public void paint(Graphics g) 
    {
        super.paint(g);
        if (backgroundImage != null) 
        {
            // 背景画像をウィンドウサイズにリサイズ
            Image resizedBackground = backgroundImage.getScaledInstance(getWidth(), getHeight(), Image.SCALE_SMOOTH);
            g.drawImage(resizedBackground, 0, 0, this); // 背景画像を描画
        }
        if (foregroundImage != null) 
        {
            // フロント画像を下に描画
            int y = getHeight() - foregroundImage.getHeight();
            g.drawImage(foregroundImage, 0, y, this); // フロント画像を描画
        }
        if (playerImage != null) 
        {
            Player.drawPlayer(g, playerImage, getHeight()); // プレイヤー描画メソッドを呼び出す
        }
    }
}
